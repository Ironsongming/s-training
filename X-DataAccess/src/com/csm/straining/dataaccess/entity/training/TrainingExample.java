package com.csm.straining.dataaccess.entity.training;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class TrainingExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tb_training
     *
     * @mbggenerated Sun Apr 24 01:38:45 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tb_training
     *
     * @mbggenerated Sun Apr 24 01:38:45 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tb_training
     *
     * @mbggenerated Sun Apr 24 01:38:45 CST 2016
     */
    protected List<Criteria> oredCriteria;

    private Integer limit;

    private Integer offset;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_training
     *
     * @mbggenerated Sun Apr 24 01:38:45 CST 2016
     */
    public TrainingExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_training
     *
     * @mbggenerated Sun Apr 24 01:38:45 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_training
     *
     * @mbggenerated Sun Apr 24 01:38:45 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_training
     *
     * @mbggenerated Sun Apr 24 01:38:45 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_training
     *
     * @mbggenerated Sun Apr 24 01:38:45 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_training
     *
     * @mbggenerated Sun Apr 24 01:38:45 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_training
     *
     * @mbggenerated Sun Apr 24 01:38:45 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_training
     *
     * @mbggenerated Sun Apr 24 01:38:45 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_training
     *
     * @mbggenerated Sun Apr 24 01:38:45 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_training
     *
     * @mbggenerated Sun Apr 24 01:38:45 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_training
     *
     * @mbggenerated Sun Apr 24 01:38:45 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    public void setLimit(Integer limit) {
        this.limit = limit;
    }

    public Integer getLimit() {
        return limit;
    }

    public void setOffset(Integer offset) {
        this.offset = offset;
    }

    public Integer getOffset() {
        return offset;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tb_training
     *
     * @mbggenerated Sun Apr 24 01:38:45 CST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andUserIDIsNull() {
            addCriterion("userID is null");
            return (Criteria) this;
        }

        public Criteria andUserIDIsNotNull() {
            addCriterion("userID is not null");
            return (Criteria) this;
        }

        public Criteria andUserIDEqualTo(Long value) {
            addCriterion("userID =", value, "userID");
            return (Criteria) this;
        }

        public Criteria andUserIDNotEqualTo(Long value) {
            addCriterion("userID <>", value, "userID");
            return (Criteria) this;
        }

        public Criteria andUserIDGreaterThan(Long value) {
            addCriterion("userID >", value, "userID");
            return (Criteria) this;
        }

        public Criteria andUserIDGreaterThanOrEqualTo(Long value) {
            addCriterion("userID >=", value, "userID");
            return (Criteria) this;
        }

        public Criteria andUserIDLessThan(Long value) {
            addCriterion("userID <", value, "userID");
            return (Criteria) this;
        }

        public Criteria andUserIDLessThanOrEqualTo(Long value) {
            addCriterion("userID <=", value, "userID");
            return (Criteria) this;
        }

        public Criteria andUserIDIn(List<Long> values) {
            addCriterion("userID in", values, "userID");
            return (Criteria) this;
        }

        public Criteria andUserIDNotIn(List<Long> values) {
            addCriterion("userID not in", values, "userID");
            return (Criteria) this;
        }

        public Criteria andUserIDBetween(Long value1, Long value2) {
            addCriterion("userID between", value1, value2, "userID");
            return (Criteria) this;
        }

        public Criteria andUserIDNotBetween(Long value1, Long value2) {
            addCriterion("userID not between", value1, value2, "userID");
            return (Criteria) this;
        }

        public Criteria andTypeIsNull() {
            addCriterion("type is null");
            return (Criteria) this;
        }

        public Criteria andTypeIsNotNull() {
            addCriterion("type is not null");
            return (Criteria) this;
        }

        public Criteria andTypeEqualTo(Integer value) {
            addCriterion("type =", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotEqualTo(Integer value) {
            addCriterion("type <>", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThan(Integer value) {
            addCriterion("type >", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("type >=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThan(Integer value) {
            addCriterion("type <", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThanOrEqualTo(Integer value) {
            addCriterion("type <=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeIn(List<Integer> values) {
            addCriterion("type in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotIn(List<Integer> values) {
            addCriterion("type not in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeBetween(Integer value1, Integer value2) {
            addCriterion("type between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("type not between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andBeginAtIsNull() {
            addCriterion("beginAt is null");
            return (Criteria) this;
        }

        public Criteria andBeginAtIsNotNull() {
            addCriterion("beginAt is not null");
            return (Criteria) this;
        }

        public Criteria andBeginAtEqualTo(Date value) {
            addCriterion("beginAt =", value, "beginAt");
            return (Criteria) this;
        }

        public Criteria andBeginAtNotEqualTo(Date value) {
            addCriterion("beginAt <>", value, "beginAt");
            return (Criteria) this;
        }

        public Criteria andBeginAtGreaterThan(Date value) {
            addCriterion("beginAt >", value, "beginAt");
            return (Criteria) this;
        }

        public Criteria andBeginAtGreaterThanOrEqualTo(Date value) {
            addCriterion("beginAt >=", value, "beginAt");
            return (Criteria) this;
        }

        public Criteria andBeginAtLessThan(Date value) {
            addCriterion("beginAt <", value, "beginAt");
            return (Criteria) this;
        }

        public Criteria andBeginAtLessThanOrEqualTo(Date value) {
            addCriterion("beginAt <=", value, "beginAt");
            return (Criteria) this;
        }

        public Criteria andBeginAtIn(List<Date> values) {
            addCriterion("beginAt in", values, "beginAt");
            return (Criteria) this;
        }

        public Criteria andBeginAtNotIn(List<Date> values) {
            addCriterion("beginAt not in", values, "beginAt");
            return (Criteria) this;
        }

        public Criteria andBeginAtBetween(Date value1, Date value2) {
            addCriterion("beginAt between", value1, value2, "beginAt");
            return (Criteria) this;
        }

        public Criteria andBeginAtNotBetween(Date value1, Date value2) {
            addCriterion("beginAt not between", value1, value2, "beginAt");
            return (Criteria) this;
        }

        public Criteria andFinishAtIsNull() {
            addCriterion("finishAt is null");
            return (Criteria) this;
        }

        public Criteria andFinishAtIsNotNull() {
            addCriterion("finishAt is not null");
            return (Criteria) this;
        }

        public Criteria andFinishAtEqualTo(Date value) {
            addCriterion("finishAt =", value, "finishAt");
            return (Criteria) this;
        }

        public Criteria andFinishAtNotEqualTo(Date value) {
            addCriterion("finishAt <>", value, "finishAt");
            return (Criteria) this;
        }

        public Criteria andFinishAtGreaterThan(Date value) {
            addCriterion("finishAt >", value, "finishAt");
            return (Criteria) this;
        }

        public Criteria andFinishAtGreaterThanOrEqualTo(Date value) {
            addCriterion("finishAt >=", value, "finishAt");
            return (Criteria) this;
        }

        public Criteria andFinishAtLessThan(Date value) {
            addCriterion("finishAt <", value, "finishAt");
            return (Criteria) this;
        }

        public Criteria andFinishAtLessThanOrEqualTo(Date value) {
            addCriterion("finishAt <=", value, "finishAt");
            return (Criteria) this;
        }

        public Criteria andFinishAtIn(List<Date> values) {
            addCriterion("finishAt in", values, "finishAt");
            return (Criteria) this;
        }

        public Criteria andFinishAtNotIn(List<Date> values) {
            addCriterion("finishAt not in", values, "finishAt");
            return (Criteria) this;
        }

        public Criteria andFinishAtBetween(Date value1, Date value2) {
            addCriterion("finishAt between", value1, value2, "finishAt");
            return (Criteria) this;
        }

        public Criteria andFinishAtNotBetween(Date value1, Date value2) {
            addCriterion("finishAt not between", value1, value2, "finishAt");
            return (Criteria) this;
        }

        public Criteria andPresetCountIsNull() {
            addCriterion("presetCount is null");
            return (Criteria) this;
        }

        public Criteria andPresetCountIsNotNull() {
            addCriterion("presetCount is not null");
            return (Criteria) this;
        }

        public Criteria andPresetCountEqualTo(Integer value) {
            addCriterion("presetCount =", value, "presetCount");
            return (Criteria) this;
        }

        public Criteria andPresetCountNotEqualTo(Integer value) {
            addCriterion("presetCount <>", value, "presetCount");
            return (Criteria) this;
        }

        public Criteria andPresetCountGreaterThan(Integer value) {
            addCriterion("presetCount >", value, "presetCount");
            return (Criteria) this;
        }

        public Criteria andPresetCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("presetCount >=", value, "presetCount");
            return (Criteria) this;
        }

        public Criteria andPresetCountLessThan(Integer value) {
            addCriterion("presetCount <", value, "presetCount");
            return (Criteria) this;
        }

        public Criteria andPresetCountLessThanOrEqualTo(Integer value) {
            addCriterion("presetCount <=", value, "presetCount");
            return (Criteria) this;
        }

        public Criteria andPresetCountIn(List<Integer> values) {
            addCriterion("presetCount in", values, "presetCount");
            return (Criteria) this;
        }

        public Criteria andPresetCountNotIn(List<Integer> values) {
            addCriterion("presetCount not in", values, "presetCount");
            return (Criteria) this;
        }

        public Criteria andPresetCountBetween(Integer value1, Integer value2) {
            addCriterion("presetCount between", value1, value2, "presetCount");
            return (Criteria) this;
        }

        public Criteria andPresetCountNotBetween(Integer value1, Integer value2) {
            addCriterion("presetCount not between", value1, value2, "presetCount");
            return (Criteria) this;
        }

        public Criteria andPresetGroupIsNull() {
            addCriterion("presetGroup is null");
            return (Criteria) this;
        }

        public Criteria andPresetGroupIsNotNull() {
            addCriterion("presetGroup is not null");
            return (Criteria) this;
        }

        public Criteria andPresetGroupEqualTo(Integer value) {
            addCriterion("presetGroup =", value, "presetGroup");
            return (Criteria) this;
        }

        public Criteria andPresetGroupNotEqualTo(Integer value) {
            addCriterion("presetGroup <>", value, "presetGroup");
            return (Criteria) this;
        }

        public Criteria andPresetGroupGreaterThan(Integer value) {
            addCriterion("presetGroup >", value, "presetGroup");
            return (Criteria) this;
        }

        public Criteria andPresetGroupGreaterThanOrEqualTo(Integer value) {
            addCriterion("presetGroup >=", value, "presetGroup");
            return (Criteria) this;
        }

        public Criteria andPresetGroupLessThan(Integer value) {
            addCriterion("presetGroup <", value, "presetGroup");
            return (Criteria) this;
        }

        public Criteria andPresetGroupLessThanOrEqualTo(Integer value) {
            addCriterion("presetGroup <=", value, "presetGroup");
            return (Criteria) this;
        }

        public Criteria andPresetGroupIn(List<Integer> values) {
            addCriterion("presetGroup in", values, "presetGroup");
            return (Criteria) this;
        }

        public Criteria andPresetGroupNotIn(List<Integer> values) {
            addCriterion("presetGroup not in", values, "presetGroup");
            return (Criteria) this;
        }

        public Criteria andPresetGroupBetween(Integer value1, Integer value2) {
            addCriterion("presetGroup between", value1, value2, "presetGroup");
            return (Criteria) this;
        }

        public Criteria andPresetGroupNotBetween(Integer value1, Integer value2) {
            addCriterion("presetGroup not between", value1, value2, "presetGroup");
            return (Criteria) this;
        }

        public Criteria andPerBreakTimeIsNull() {
            addCriterion("perBreakTime is null");
            return (Criteria) this;
        }

        public Criteria andPerBreakTimeIsNotNull() {
            addCriterion("perBreakTime is not null");
            return (Criteria) this;
        }

        public Criteria andPerBreakTimeEqualTo(Integer value) {
            addCriterion("perBreakTime =", value, "perBreakTime");
            return (Criteria) this;
        }

        public Criteria andPerBreakTimeNotEqualTo(Integer value) {
            addCriterion("perBreakTime <>", value, "perBreakTime");
            return (Criteria) this;
        }

        public Criteria andPerBreakTimeGreaterThan(Integer value) {
            addCriterion("perBreakTime >", value, "perBreakTime");
            return (Criteria) this;
        }

        public Criteria andPerBreakTimeGreaterThanOrEqualTo(Integer value) {
            addCriterion("perBreakTime >=", value, "perBreakTime");
            return (Criteria) this;
        }

        public Criteria andPerBreakTimeLessThan(Integer value) {
            addCriterion("perBreakTime <", value, "perBreakTime");
            return (Criteria) this;
        }

        public Criteria andPerBreakTimeLessThanOrEqualTo(Integer value) {
            addCriterion("perBreakTime <=", value, "perBreakTime");
            return (Criteria) this;
        }

        public Criteria andPerBreakTimeIn(List<Integer> values) {
            addCriterion("perBreakTime in", values, "perBreakTime");
            return (Criteria) this;
        }

        public Criteria andPerBreakTimeNotIn(List<Integer> values) {
            addCriterion("perBreakTime not in", values, "perBreakTime");
            return (Criteria) this;
        }

        public Criteria andPerBreakTimeBetween(Integer value1, Integer value2) {
            addCriterion("perBreakTime between", value1, value2, "perBreakTime");
            return (Criteria) this;
        }

        public Criteria andPerBreakTimeNotBetween(Integer value1, Integer value2) {
            addCriterion("perBreakTime not between", value1, value2, "perBreakTime");
            return (Criteria) this;
        }

        public Criteria andLocationIsNull() {
            addCriterion("location is null");
            return (Criteria) this;
        }

        public Criteria andLocationIsNotNull() {
            addCriterion("location is not null");
            return (Criteria) this;
        }

        public Criteria andLocationEqualTo(Integer value) {
            addCriterion("location =", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationNotEqualTo(Integer value) {
            addCriterion("location <>", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationGreaterThan(Integer value) {
            addCriterion("location >", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationGreaterThanOrEqualTo(Integer value) {
            addCriterion("location >=", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationLessThan(Integer value) {
            addCriterion("location <", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationLessThanOrEqualTo(Integer value) {
            addCriterion("location <=", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationIn(List<Integer> values) {
            addCriterion("location in", values, "location");
            return (Criteria) this;
        }

        public Criteria andLocationNotIn(List<Integer> values) {
            addCriterion("location not in", values, "location");
            return (Criteria) this;
        }

        public Criteria andLocationBetween(Integer value1, Integer value2) {
            addCriterion("location between", value1, value2, "location");
            return (Criteria) this;
        }

        public Criteria andLocationNotBetween(Integer value1, Integer value2) {
            addCriterion("location not between", value1, value2, "location");
            return (Criteria) this;
        }

        public Criteria andDrinkingIsNull() {
            addCriterion("drinking is null");
            return (Criteria) this;
        }

        public Criteria andDrinkingIsNotNull() {
            addCriterion("drinking is not null");
            return (Criteria) this;
        }

        public Criteria andDrinkingEqualTo(Integer value) {
            addCriterion("drinking =", value, "drinking");
            return (Criteria) this;
        }

        public Criteria andDrinkingNotEqualTo(Integer value) {
            addCriterion("drinking <>", value, "drinking");
            return (Criteria) this;
        }

        public Criteria andDrinkingGreaterThan(Integer value) {
            addCriterion("drinking >", value, "drinking");
            return (Criteria) this;
        }

        public Criteria andDrinkingGreaterThanOrEqualTo(Integer value) {
            addCriterion("drinking >=", value, "drinking");
            return (Criteria) this;
        }

        public Criteria andDrinkingLessThan(Integer value) {
            addCriterion("drinking <", value, "drinking");
            return (Criteria) this;
        }

        public Criteria andDrinkingLessThanOrEqualTo(Integer value) {
            addCriterion("drinking <=", value, "drinking");
            return (Criteria) this;
        }

        public Criteria andDrinkingIn(List<Integer> values) {
            addCriterion("drinking in", values, "drinking");
            return (Criteria) this;
        }

        public Criteria andDrinkingNotIn(List<Integer> values) {
            addCriterion("drinking not in", values, "drinking");
            return (Criteria) this;
        }

        public Criteria andDrinkingBetween(Integer value1, Integer value2) {
            addCriterion("drinking between", value1, value2, "drinking");
            return (Criteria) this;
        }

        public Criteria andDrinkingNotBetween(Integer value1, Integer value2) {
            addCriterion("drinking not between", value1, value2, "drinking");
            return (Criteria) this;
        }

        public Criteria andGearIsNull() {
            addCriterion("gear is null");
            return (Criteria) this;
        }

        public Criteria andGearIsNotNull() {
            addCriterion("gear is not null");
            return (Criteria) this;
        }

        public Criteria andGearEqualTo(Integer value) {
            addCriterion("gear =", value, "gear");
            return (Criteria) this;
        }

        public Criteria andGearNotEqualTo(Integer value) {
            addCriterion("gear <>", value, "gear");
            return (Criteria) this;
        }

        public Criteria andGearGreaterThan(Integer value) {
            addCriterion("gear >", value, "gear");
            return (Criteria) this;
        }

        public Criteria andGearGreaterThanOrEqualTo(Integer value) {
            addCriterion("gear >=", value, "gear");
            return (Criteria) this;
        }

        public Criteria andGearLessThan(Integer value) {
            addCriterion("gear <", value, "gear");
            return (Criteria) this;
        }

        public Criteria andGearLessThanOrEqualTo(Integer value) {
            addCriterion("gear <=", value, "gear");
            return (Criteria) this;
        }

        public Criteria andGearIn(List<Integer> values) {
            addCriterion("gear in", values, "gear");
            return (Criteria) this;
        }

        public Criteria andGearNotIn(List<Integer> values) {
            addCriterion("gear not in", values, "gear");
            return (Criteria) this;
        }

        public Criteria andGearBetween(Integer value1, Integer value2) {
            addCriterion("gear between", value1, value2, "gear");
            return (Criteria) this;
        }

        public Criteria andGearNotBetween(Integer value1, Integer value2) {
            addCriterion("gear not between", value1, value2, "gear");
            return (Criteria) this;
        }

        public Criteria andActualCountIsNull() {
            addCriterion("actualCount is null");
            return (Criteria) this;
        }

        public Criteria andActualCountIsNotNull() {
            addCriterion("actualCount is not null");
            return (Criteria) this;
        }

        public Criteria andActualCountEqualTo(Integer value) {
            addCriterion("actualCount =", value, "actualCount");
            return (Criteria) this;
        }

        public Criteria andActualCountNotEqualTo(Integer value) {
            addCriterion("actualCount <>", value, "actualCount");
            return (Criteria) this;
        }

        public Criteria andActualCountGreaterThan(Integer value) {
            addCriterion("actualCount >", value, "actualCount");
            return (Criteria) this;
        }

        public Criteria andActualCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("actualCount >=", value, "actualCount");
            return (Criteria) this;
        }

        public Criteria andActualCountLessThan(Integer value) {
            addCriterion("actualCount <", value, "actualCount");
            return (Criteria) this;
        }

        public Criteria andActualCountLessThanOrEqualTo(Integer value) {
            addCriterion("actualCount <=", value, "actualCount");
            return (Criteria) this;
        }

        public Criteria andActualCountIn(List<Integer> values) {
            addCriterion("actualCount in", values, "actualCount");
            return (Criteria) this;
        }

        public Criteria andActualCountNotIn(List<Integer> values) {
            addCriterion("actualCount not in", values, "actualCount");
            return (Criteria) this;
        }

        public Criteria andActualCountBetween(Integer value1, Integer value2) {
            addCriterion("actualCount between", value1, value2, "actualCount");
            return (Criteria) this;
        }

        public Criteria andActualCountNotBetween(Integer value1, Integer value2) {
            addCriterion("actualCount not between", value1, value2, "actualCount");
            return (Criteria) this;
        }

        public Criteria andActualGroupIsNull() {
            addCriterion("actualGroup is null");
            return (Criteria) this;
        }

        public Criteria andActualGroupIsNotNull() {
            addCriterion("actualGroup is not null");
            return (Criteria) this;
        }

        public Criteria andActualGroupEqualTo(Integer value) {
            addCriterion("actualGroup =", value, "actualGroup");
            return (Criteria) this;
        }

        public Criteria andActualGroupNotEqualTo(Integer value) {
            addCriterion("actualGroup <>", value, "actualGroup");
            return (Criteria) this;
        }

        public Criteria andActualGroupGreaterThan(Integer value) {
            addCriterion("actualGroup >", value, "actualGroup");
            return (Criteria) this;
        }

        public Criteria andActualGroupGreaterThanOrEqualTo(Integer value) {
            addCriterion("actualGroup >=", value, "actualGroup");
            return (Criteria) this;
        }

        public Criteria andActualGroupLessThan(Integer value) {
            addCriterion("actualGroup <", value, "actualGroup");
            return (Criteria) this;
        }

        public Criteria andActualGroupLessThanOrEqualTo(Integer value) {
            addCriterion("actualGroup <=", value, "actualGroup");
            return (Criteria) this;
        }

        public Criteria andActualGroupIn(List<Integer> values) {
            addCriterion("actualGroup in", values, "actualGroup");
            return (Criteria) this;
        }

        public Criteria andActualGroupNotIn(List<Integer> values) {
            addCriterion("actualGroup not in", values, "actualGroup");
            return (Criteria) this;
        }

        public Criteria andActualGroupBetween(Integer value1, Integer value2) {
            addCriterion("actualGroup between", value1, value2, "actualGroup");
            return (Criteria) this;
        }

        public Criteria andActualGroupNotBetween(Integer value1, Integer value2) {
            addCriterion("actualGroup not between", value1, value2, "actualGroup");
            return (Criteria) this;
        }

        public Criteria andActualBreakTimeIsNull() {
            addCriterion("actualBreakTime is null");
            return (Criteria) this;
        }

        public Criteria andActualBreakTimeIsNotNull() {
            addCriterion("actualBreakTime is not null");
            return (Criteria) this;
        }

        public Criteria andActualBreakTimeEqualTo(Integer value) {
            addCriterion("actualBreakTime =", value, "actualBreakTime");
            return (Criteria) this;
        }

        public Criteria andActualBreakTimeNotEqualTo(Integer value) {
            addCriterion("actualBreakTime <>", value, "actualBreakTime");
            return (Criteria) this;
        }

        public Criteria andActualBreakTimeGreaterThan(Integer value) {
            addCriterion("actualBreakTime >", value, "actualBreakTime");
            return (Criteria) this;
        }

        public Criteria andActualBreakTimeGreaterThanOrEqualTo(Integer value) {
            addCriterion("actualBreakTime >=", value, "actualBreakTime");
            return (Criteria) this;
        }

        public Criteria andActualBreakTimeLessThan(Integer value) {
            addCriterion("actualBreakTime <", value, "actualBreakTime");
            return (Criteria) this;
        }

        public Criteria andActualBreakTimeLessThanOrEqualTo(Integer value) {
            addCriterion("actualBreakTime <=", value, "actualBreakTime");
            return (Criteria) this;
        }

        public Criteria andActualBreakTimeIn(List<Integer> values) {
            addCriterion("actualBreakTime in", values, "actualBreakTime");
            return (Criteria) this;
        }

        public Criteria andActualBreakTimeNotIn(List<Integer> values) {
            addCriterion("actualBreakTime not in", values, "actualBreakTime");
            return (Criteria) this;
        }

        public Criteria andActualBreakTimeBetween(Integer value1, Integer value2) {
            addCriterion("actualBreakTime between", value1, value2, "actualBreakTime");
            return (Criteria) this;
        }

        public Criteria andActualBreakTimeNotBetween(Integer value1, Integer value2) {
            addCriterion("actualBreakTime not between", value1, value2, "actualBreakTime");
            return (Criteria) this;
        }

        public Criteria andActualConsumTimeIsNull() {
            addCriterion("actualConsumTime is null");
            return (Criteria) this;
        }

        public Criteria andActualConsumTimeIsNotNull() {
            addCriterion("actualConsumTime is not null");
            return (Criteria) this;
        }

        public Criteria andActualConsumTimeEqualTo(Integer value) {
            addCriterion("actualConsumTime =", value, "actualConsumTime");
            return (Criteria) this;
        }

        public Criteria andActualConsumTimeNotEqualTo(Integer value) {
            addCriterion("actualConsumTime <>", value, "actualConsumTime");
            return (Criteria) this;
        }

        public Criteria andActualConsumTimeGreaterThan(Integer value) {
            addCriterion("actualConsumTime >", value, "actualConsumTime");
            return (Criteria) this;
        }

        public Criteria andActualConsumTimeGreaterThanOrEqualTo(Integer value) {
            addCriterion("actualConsumTime >=", value, "actualConsumTime");
            return (Criteria) this;
        }

        public Criteria andActualConsumTimeLessThan(Integer value) {
            addCriterion("actualConsumTime <", value, "actualConsumTime");
            return (Criteria) this;
        }

        public Criteria andActualConsumTimeLessThanOrEqualTo(Integer value) {
            addCriterion("actualConsumTime <=", value, "actualConsumTime");
            return (Criteria) this;
        }

        public Criteria andActualConsumTimeIn(List<Integer> values) {
            addCriterion("actualConsumTime in", values, "actualConsumTime");
            return (Criteria) this;
        }

        public Criteria andActualConsumTimeNotIn(List<Integer> values) {
            addCriterion("actualConsumTime not in", values, "actualConsumTime");
            return (Criteria) this;
        }

        public Criteria andActualConsumTimeBetween(Integer value1, Integer value2) {
            addCriterion("actualConsumTime between", value1, value2, "actualConsumTime");
            return (Criteria) this;
        }

        public Criteria andActualConsumTimeNotBetween(Integer value1, Integer value2) {
            addCriterion("actualConsumTime not between", value1, value2, "actualConsumTime");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("status is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("status is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Byte value) {
            addCriterion("status =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Byte value) {
            addCriterion("status <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Byte value) {
            addCriterion("status >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Byte value) {
            addCriterion("status >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Byte value) {
            addCriterion("status <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Byte value) {
            addCriterion("status <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Byte> values) {
            addCriterion("status in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Byte> values) {
            addCriterion("status not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Byte value1, Byte value2) {
            addCriterion("status between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Byte value1, Byte value2) {
            addCriterion("status not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andCreateAtIsNull() {
            addCriterion("createAt is null");
            return (Criteria) this;
        }

        public Criteria andCreateAtIsNotNull() {
            addCriterion("createAt is not null");
            return (Criteria) this;
        }

        public Criteria andCreateAtEqualTo(Date value) {
            addCriterion("createAt =", value, "createAt");
            return (Criteria) this;
        }

        public Criteria andCreateAtNotEqualTo(Date value) {
            addCriterion("createAt <>", value, "createAt");
            return (Criteria) this;
        }

        public Criteria andCreateAtGreaterThan(Date value) {
            addCriterion("createAt >", value, "createAt");
            return (Criteria) this;
        }

        public Criteria andCreateAtGreaterThanOrEqualTo(Date value) {
            addCriterion("createAt >=", value, "createAt");
            return (Criteria) this;
        }

        public Criteria andCreateAtLessThan(Date value) {
            addCriterion("createAt <", value, "createAt");
            return (Criteria) this;
        }

        public Criteria andCreateAtLessThanOrEqualTo(Date value) {
            addCriterion("createAt <=", value, "createAt");
            return (Criteria) this;
        }

        public Criteria andCreateAtIn(List<Date> values) {
            addCriterion("createAt in", values, "createAt");
            return (Criteria) this;
        }

        public Criteria andCreateAtNotIn(List<Date> values) {
            addCriterion("createAt not in", values, "createAt");
            return (Criteria) this;
        }

        public Criteria andCreateAtBetween(Date value1, Date value2) {
            addCriterion("createAt between", value1, value2, "createAt");
            return (Criteria) this;
        }

        public Criteria andCreateAtNotBetween(Date value1, Date value2) {
            addCriterion("createAt not between", value1, value2, "createAt");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tb_training
     *
     * @mbggenerated do_not_delete_during_merge Sun Apr 24 01:38:45 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tb_training
     *
     * @mbggenerated Sun Apr 24 01:38:45 CST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}